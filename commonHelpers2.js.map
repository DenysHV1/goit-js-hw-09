{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["const form = document.querySelector('.feedback-form');\nconst inputEmail = document.querySelector('.input-email');\nconst message = document.querySelector('.message');\nconst done = document.querySelector('.text');\nconst emailError = document.querySelector('.error');\nconst emptyError = document.querySelector('.empty-error');\nclass User {\n  constructor(email, message) {\n    this.email = email;\n    this.message = message;\n  }\n}\n\nform.addEventListener('submit', oneClickSend);\n\nfunction oneClickSend(event) {\n  event.preventDefault();\n  const email = event.target.elements.email.value;\n  const message = event.target.elements.message.value;\n  const array = [\n    '!',\n    '£',\n    '$',\n    '%',\n    '^',\n    '&',\n    '*',\n    '(',\n    ')',\n    '_',\n    '-',\n    '+',\n    '=',\n    '#',\n    '~',\n    '/',\n    '?',\n    '{',\n    '}',\n    '[',\n    ']',\n    '`',\n    '¬',\n    '|',\n    '\"',\n    ',',\n    '<',\n    '>',\n    ':',\n    ';',\n  ];\n  for (let i = 0; i < array.length; i += 1) {\n    if (email.includes(array[i])) {\n      emailError.textContent = `Invalid character in name: ${array[i]}`;\n      return emailError.textContent;\n    }\n  }\n  emailError.textContent = '';\n  \n  if (email.length === 0 && message.length === 0) {\n    return (emptyError.textContent = 'Fill please all fields');\n  }\n  emptyError.textContent = '';\n\n  if (message.length === 0) {\n    return (emptyError.textContent = 'Fill please all fields');\n  }\n  emptyError.textContent = '';\n\n  const resultObjUser = new User(email.trim().toLowerCase(), message.trim());\n  console.log(resultObjUser);\n  done.textContent = 'Success!';\n}\n\nconst feedbackFormState = {\n  email: '',\n  message: '',\n};\n\ninputEmail.addEventListener('input', event => {\n  feedbackFormState.email = event.target.value;\n  localStorage.setItem(\n    'feedback-form-state',\n    JSON.stringify(feedbackFormState)\n  );\n});\n\nmessage.addEventListener('input', event => {\n  feedbackFormState.message = event.target.value;\n  localStorage.setItem(\n    'feedback-form-state',\n    JSON.stringify(feedbackFormState)\n  );\n});\n"],"names":["form","inputEmail","message","done","emailError","emptyError","User","email","oneClickSend","event","array","i","resultObjUser","feedbackFormState"],"mappings":"uFAAA,MAAMA,EAAO,SAAS,cAAc,gBAAgB,EAC9CC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAa,SAAS,cAAc,QAAQ,EAC5CC,EAAa,SAAS,cAAc,cAAc,EACxD,MAAMC,CAAK,CACT,YAAYC,EAAOL,EAAS,CAC1B,KAAK,MAAQK,EACb,KAAK,QAAUL,CAChB,CACH,CAEAF,EAAK,iBAAiB,SAAUQ,CAAY,EAE5C,SAASA,EAAaC,EAAO,CAC3BA,EAAM,eAAc,EACpB,MAAMF,EAAQE,EAAM,OAAO,SAAS,MAAM,MACpCP,EAAUO,EAAM,OAAO,SAAS,QAAQ,MACxCC,EAAQ,CACZ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACJ,EACE,QAASC,EAAI,EAAGA,EAAID,EAAM,OAAQC,GAAK,EACrC,GAAIJ,EAAM,SAASG,EAAMC,CAAC,CAAC,EACzB,OAAAP,EAAW,YAAc,8BAA8BM,EAAMC,CAAC,CAAC,GACxDP,EAAW,YAUtB,GAPAA,EAAW,YAAc,GAErBG,EAAM,SAAW,GAAKL,EAAQ,SAAW,IAG7CG,EAAW,YAAc,GAErBH,EAAQ,SAAW,GACrB,OAAQG,EAAW,YAAc,yBAEnCA,EAAW,YAAc,GAEzB,MAAMO,EAAgB,IAAIN,EAAKC,EAAM,OAAO,cAAeL,EAAQ,KAAI,CAAE,EACzE,QAAQ,IAAIU,CAAa,EACzBT,EAAK,YAAc,UACrB,CAEA,MAAMU,EAAoB,CACxB,MAAO,GACP,QAAS,EACX,EAEAZ,EAAW,iBAAiB,QAASQ,GAAS,CAC5CI,EAAkB,MAAQJ,EAAM,OAAO,MACvC,aAAa,QACX,sBACA,KAAK,UAAUI,CAAiB,CACpC,CACA,CAAC,EAEDX,EAAQ,iBAAiB,QAASO,GAAS,CACzCI,EAAkB,QAAUJ,EAAM,OAAO,MACzC,aAAa,QACX,sBACA,KAAK,UAAUI,CAAiB,CACpC,CACA,CAAC"}